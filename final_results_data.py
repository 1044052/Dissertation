# -*- coding: utf-8 -*-
"""Final Results Data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1E0sKFhdnggURSvhj07tI5qwNgfo96n2e
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from google.colab import files
uploaded = files.upload()

import math
def mae(target, predicted):
    target, predicted = np.array(target), np.array(predicted)
    return np.mean(np.abs(target - predicted))

def rmse(target, predicted):
  MSE = np.square(np.subtract(target,predicted)).mean() 
  RMSE = math.sqrt(MSE)
  return RMSE

old_1000500200_df = pd.read_csv("old_1000500200.csv")

# settings = [batch size, old = no intramolecular, 50010050, ELU, MaxPool]
def graph_all_data(df, settings):
  predicted = df['Predict pKa']
  target = df['Target pKa']
  fig = plt.figure()
  ax = fig.add_subplot(1, 1, 1)
  plt.gca().set_aspect('equal')
  N = 801
  colors = np.random.rand(N)
  plt.title('Predicted pKa vs. Target pKa ' + settings[1] + settings[2])
  plt.scatter(target, predicted, s = 3, c = 'skyblue')
  plt.xlabel("Target pKa")
  plt.ylabel("Predicted pKa")
  ax.text(15, -0.5,settings[1] + settings[2], ha='left', va='top')
  z = np.polyfit(target, predicted, 1)
  p = np.poly1d(z)
  plt.plot(target, p(target), "g")
  corr_matrix = np.corrcoef(target, predicted)
  corr = corr_matrix[0,1]
  R_sq = round(corr**2, 6)
  ax.text(21, -5,str(p), ha='right', va='top', color = "g")
  ax.text(21, -8.1,"$R^2$ = "+str(R_sq), ha='right', va='top')
  ax.text(21, -7.1,"$R$ = "+ str(round(np.sqrt(R_sq), 6)), ha='right', va='top')
  MAE = round(mae(target, predicted), 4)
  RMSE = round(rmse(target, predicted), 4)
  ax.text(21, -9.5,"MAE = " + str(MAE), ha='right', va='top')
  ax.text(21, -10.7,"RMSE = " + str(RMSE), ha='right', va='top')
  fig.savefig('old_1000500200_predVtar.png', bbox_inches = "tight") 
  files.download("old_1000500200_predVtar.png")
  print(p)

graph_all_data(old_1000500200_df, ["32", "old", "1000500200", "ELU", "MaxPool"])

new_1000500200_df = pd.read_csv("new_1000500200.csv")

# settings = [batch size, old = no intramolecular, 50010050, ELU, MaxPool]
def graph_all_data(df, settings):
  predicted = df['Predict pKa']
  target = df['Target pKa']
  fig = plt.figure()
  ax = fig.add_subplot(1, 1, 1)
  N = 801
  colors = np.random.rand(N)
  plt.gca().set_aspect('equal')
  plt.title('Predicted pKa vs. Target pKa ' + settings[1] + settings[2])
  plt.scatter(target, predicted, s = 3, c = 'skyblue')
  plt.xlabel("Target pKa")
  plt.ylabel("Predicted pKa")
  ax.text(14, 1,settings[1] + settings[2], ha='left', va='top')
  z = np.polyfit(target, predicted, 1)
  p = np.poly1d(z)
  plt.plot(target, p(target), "g")
  corr_matrix = np.corrcoef(target, predicted)
  corr = corr_matrix[0,1]
  R_sq = round(corr**2, 6)
  ax.text(21, -5,str(p), ha='right', va='top', color = "g")
  ax.text(21, -8.1,"$R^2$ = "+str(R_sq), ha='right', va='top')
  ax.text(21, -7,"$R$ = "+ str(round(np.sqrt(R_sq), 6)), ha='right', va='top')
  MAE = round(mae(target, predicted), 4)
  RMSE = round(rmse(target, predicted), 4)
  ax.text(21, -9.5,"MAE = " + str(MAE), ha='right', va='top')
  ax.text(21, -10.7,"RMSE = " + str(RMSE), ha='right', va='top')
  fig.savefig('new_1000500200_predVtar.png', bbox_inches = "tight") 
  files.download("new_1000500200_predVtar.png")
  print(p)

graph_all_data(new_1000500200_df, ["32", "new", "1000500200", "ELU", "MaxPool"])